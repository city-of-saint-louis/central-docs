{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to Central Docs","text":""},{"location":"index.html#single-source-of-truth-ssot","title":"Single Source of Truth (SSoT)","text":"<p>The goal of Central Docs is to to establish a single, authoritative source for all policies, procedures,  and practices across all city repositories and development projects. </p> <p>These guidelines are intended to facilitate, rather than restrict, the collaborative development experience,  and we encourage all involved to discuss, contribute, and improve this documentation.</p>"},{"location":"branching.html","title":"Branching","text":"<p>Branching is an integral part of our workflow; it facilitates multiple independent lines of development and reduces the risk of conflicts in a collaborative working environment. By packaging changes into  focused feature branches, we ensure that the main branch is kept clean and stable and that all changes are isolated and easy to review and test. </p>"},{"location":"branching.html#branch-name-components","title":"Branch Name Components","text":"<p>A branch name consist of two components: A standard prefix and a descriptive name. The prefix should be separated from the branch name by a single <code>/</code> character: <code>prefix/descriptive-branch-name</code></p>"},{"location":"branching.html#standard-prefixes","title":"Standard Prefixes","text":"<p>Prefixes help to quickly identify the purpose of a branch, and all branch names should begin with one of the following standard prefixes:</p> Prefix Description Example feature add new functionality feature/add-backend-logging bugfix address a bug or issue fix/handle-database-error hotfix address a bug or issue (direct push to main) hotfix/controller-infinite-loop refactor modify or improve existing code refactor/service-layer chore update dependencies or prod env chore/update-dependencies docs update or add documentation docs/update"},{"location":"branching.html#descriptive-name","title":"Descriptive Name","text":"<ul> <li>The portion of the branch name following the standard prefix should briefly describe the branch's purpose.</li> <li>The branch name should be all lower case</li> <li>Separate words in the branch name with dashes to improve readability</li> <li>Branch names should not include special characters (other than the aforementioned dash or forward slash)</li> </ul>"},{"location":"branching.html#examples","title":"Examples","text":"<p>good branch names</p> <p>Add search functionality to a navigation element: <code>feature/nav-search-function</code></p> <p>Update package.json: <code>chore/update-dependencies</code></p> <p>Apply an emergency production fix: <code>hotfix/error-handling-vulnerability</code></p> <p>bad branch names</p> <p>Add search functionality to a navigation element: <code>AddSearch_toNav</code></p> <p>Update package.json: <code>UPDATE THE DEPENDENCIES!!!</code></p> <p>Apply an emergency production fix: <code>feature-fix-bug</code></p>"},{"location":"workflow.html","title":"Workflow","text":""},{"location":"workflow.html#overview","title":"Overview","text":"<p>Our workflow is an essential part of our functional collaborative environment, and can be broadly categorized into three stages: Implementation, Review, and Integration. </p> <p>Each workflow stage consists of one or more activities that must be completed before moving to the next stage of the workflow.  </p>"},{"location":"workflow.html#implementation","title":"Implementation","text":""},{"location":"workflow.html#code","title":"Code","text":"<p>The developer makes code changes in their local development environment</p>"},{"location":"workflow.html#test","title":"Test","text":"<p>The developer tests code changes in their local development environment</p>"},{"location":"workflow.html#push","title":"Push","text":"<p>The developer uploads changes to a feature branch in the remote repository</p>"},{"location":"workflow.html#review","title":"Review","text":""},{"location":"workflow.html#create-pull-request","title":"Create Pull Request","text":"<p>The developer creates a new pull request </p>"},{"location":"workflow.html#request-review","title":"Request Review","text":"<p>The developer requests a code review from one or more designated reviewers</p>"},{"location":"workflow.html#conduct-review","title":"Conduct Review","text":"<p>The reviewer reviews changes made to the code and either approves them or requests additional changes</p>"},{"location":"workflow.html#integration","title":"Integration","text":""},{"location":"workflow.html#merge","title":"Merge","text":"<p>The developer merges the code into the main branch</p>"},{"location":"workflow.html#resolve-conflicts","title":"Resolve Conflicts","text":"<p>The developer resolves any conflicts that arise during the merge operation</p>"},{"location":"workflow.html#deploy","title":"Deploy","text":"<p>Changes are deployed to the target environment</p> <p>Iterative Process</p> <p>Most workflow stages and activities are iterative. A common example of this iteration is as follows:</p> <ul> <li>A developer completes initial implementation activities, creates a pull request, and requests a review.  </li> <li>The reviewer conducts a review and requests that changes should be made to the code. </li> <li>The developer again performs the implementation steps and requests another review. </li> <li>The reviewer either approves this new round of changes or indicates that more changes are needed. </li> <li>This cycling of the implementation and review stages (and their associated activities) will continue until the changes have been approved and the workflow can advance to the integration stage.</li> </ul>"}]}